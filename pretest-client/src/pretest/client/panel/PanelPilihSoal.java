/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelPilihSoal.java
 *
 * Created on Dec 2, 2011, 9:48:45 PM
 */
package pretest.client.panel;

import java.rmi.RemoteException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import pretest.client.PretestClient;
import pretest.client.frame.MainFrameClient;
import pretest.client.util.PilihSoalListener;
import pretest.entity.Mahasiswa;
import pretest.entity.NilaiBs;
import pretest.entity.NilaiMc;
import pretest.entity.PertemuanPraktikum;
import pretest.entity.Praktikum;
import pretest.entity.Setting;
import pretest.entity.enuum.StatusNilai;
import pretest.service.BsPretestService;
import pretest.service.MahasiswaService;
import pretest.service.McPretestService;
import pretest.service.PraktikumService;

/**
 *
 * @author bahrie
 */
public class PanelPilihSoal extends javax.swing.JPanel {

    /** Creates new form PanelPilihSoal */
    public PanelPilihSoal() {
        initComponents();
        
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        textNim = new javax.swing.JTextField();
        textNama = new javax.swing.JTextField();
        comboPraktikum = new javax.swing.JComboBox();
        comboPertemuan = new javax.swing.JComboBox();
        buttonSoalBs = new javax.swing.JButton();
        buttonSoalMc = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        labelWaktu = new javax.swing.JLabel();

        jLabel1.setText("Nim");

        jLabel2.setText("Nama");

        jLabel3.setText("Praktikum");

        jLabel4.setText("Pertemuan");

        comboPraktikum.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPraktikumItemStateChanged(evt);
            }
        });

        comboPertemuan.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                comboPertemuanItemStateChanged(evt);
            }
        });

        buttonSoalBs.setText("SOAL BENAR SALAH");
        buttonSoalBs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSoalBsActionPerformed(evt);
            }
        });

        buttonSoalMc.setText("SOAL MULTIPLECHOISE");
        buttonSoalMc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSoalMcActionPerformed(evt);
            }
        });

        jLabel5.setText("Waktu");

        labelWaktu.setText("02 : 00");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel5)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(textNim, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                        .addComponent(textNama)
                        .addComponent(comboPraktikum, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(comboPertemuan, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(buttonSoalBs, javax.swing.GroupLayout.DEFAULT_SIZE, 216, Short.MAX_VALUE)
                        .addComponent(buttonSoalMc, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(labelWaktu))
                .addContainerGap(175, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(textNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboPraktikum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(comboPertemuan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSoalBs)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonSoalMc)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(labelWaktu))
                .addContainerGap(95, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSoalBsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSoalBsActionPerformed
        try {
            buttonSoalBsActionPerformed();
        } catch (RemoteException ex) {
            // Logger.getLogger(PanelPilihSoal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSoalBsActionPerformed

    private void buttonSoalMcActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSoalMcActionPerformed
        try {
            buttonSoalMcActionPerformed();
        } catch (RemoteException ex) {
            Logger.getLogger(PanelPilihSoal.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_buttonSoalMcActionPerformed

private void comboPraktikumItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPraktikumItemStateChanged
    try {
        comboPraktikumItemStateChanged();
    } catch (RemoteException ex) {
        Logger.getLogger(PanelPilihSoal.class.getName()).log(Level.SEVERE, null, ex);
    }
}//GEN-LAST:event_comboPraktikumItemStateChanged

private void comboPertemuanItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_comboPertemuanItemStateChanged
    comboPertemuanItemStateChanged();
}//GEN-LAST:event_comboPertemuanItemStateChanged
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonSoalBs;
    private javax.swing.JButton buttonSoalMc;
    private javax.swing.JComboBox comboPertemuan;
    private javax.swing.JComboBox comboPraktikum;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel labelWaktu;
    private javax.swing.JTextField textNama;
    private javax.swing.JTextField textNim;
    // End of variables declaration//GEN-END:variables
    PilihSoalListener listener;
    private Mahasiswa mhs;
    private Praktikum praktikum;
    Setting setting;
    private PertemuanPraktikum pertemuanPraktikum;
    private List<PertemuanPraktikum> pertemuanPraktikums;
    private List<Praktikum> praktikums;
    private PraktikumService praktikumService;
    private BsPretestService bsPretestService;
    private McPretestService mcPretestService;
    private MahasiswaService mahasiswaService;

    private void loadComboPraktikum() throws RemoteException {
        praktikumService = MainFrameClient.getPraktikumService();
        comboPraktikum.removeAllItems();
        praktikums = praktikumService.findPraktikums();
        for (Praktikum p : praktikums) {
            comboPraktikum.addItem(p.getNama());
        }

    }

    /**
     * event event
     * @throws RemoteException 
     */
    private void buttonSoalBsActionPerformed() throws RemoteException {
        List<NilaiBs> nilaiBses = bsPretestService.findNilaiBss(mhs, pertemuanPraktikum);
        
        if (nilaiBses.isEmpty()) {
            listener.pilihSoal("BS", pertemuanPraktikum, mhs,setting);
        } else {
           JOptionPane.showMessageDialog(this, "maaf anda tidak boleh membuka pretest yang pernah dikerjakan");
        }
    }

    private void buttonSoalMcActionPerformed() throws RemoteException {
        List<NilaiMc> nilaiMcs=mcPretestService.findNilaiMcs(mhs, pertemuanPraktikum);
        if (nilaiMcs.isEmpty()) {
            listener.pilihSoal("MC", pertemuanPraktikum, mhs,setting);
        } else {
            JOptionPane.showMessageDialog(this, "maaf anda tidak boleh membuka pretest yang pernah dikerjakan");
        }
    }

    private void comboPraktikumItemStateChanged() throws RemoteException {
        if (comboPraktikum.getSelectedIndex() >= 0) {
            praktikum = praktikums.get(comboPraktikum.getSelectedIndex());
            pertemuanPraktikums = praktikumService.findPraktikumPertemuans(praktikum);
            comboPertemuan.removeAllItems();
            for (PertemuanPraktikum pp : pertemuanPraktikums) {
                comboPertemuan.addItem(pp.getPertemuanKe());
            }
            comboPertemuan.setSelectedIndex(-1);
        }
    }

    private void comboPertemuanItemStateChanged() {
        if (comboPertemuan.getSelectedIndex() >= 0) {
            pertemuanPraktikum = pertemuanPraktikums.get(comboPertemuan.getSelectedIndex());
        }
    }

    public PilihSoalListener getListener() {
        return listener;
    }

    public void setListener(PilihSoalListener listener) {
        this.listener = listener;
    }

    public Mahasiswa getMhs() {
        return mhs;
    }

    public void setMhs(Mahasiswa mhs) throws RemoteException {
        this.mhs = mhs;
        textNama.setText(mhs.getNama());
        textNim.setText(mhs.getNim());
        loadComboPraktikum();
        comboPraktikum.setSelectedIndex(-1);
        bsPretestService = MainFrameClient.getBsPretestService();
        mcPretestService = MainFrameClient.getMcPretestService();
        mahasiswaService=MainFrameClient.getMahasiswaService();
        setting=mahasiswaService.getSetting();
        labelWaktu.setText(setting.getJam()+" : "+setting.getMenit());
    }
}
