/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * PanelMahasiswa.java
 *
 * Created on Dec 4, 2011, 6:22:23 PM
 */
package pretest.server.ui.panel;

import java.io.File;
import java.io.IOException;
import java.rmi.RemoteException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

import jxl.Cell;
import jxl.Sheet;
import jxl.Workbook;
import jxl.read.biff.BiffException;
import pretest.entity.Mahasiswa;
import pretest.server.PretestServer;
import pretest.server.impl.MahasiswaServiceImpl;
import pretest.service.MahasiswaService;

/**
 *
 * @author bahrie
 */
public class PanelMahasiswa extends javax.swing.JPanel {

    /** Creates new form PanelMahasiswa */
    public PanelMahasiswa() throws RemoteException {
        initComponents();

        FileNameExtensionFilter filter = new FileNameExtensionFilter("All Files","xls", "xlsx", "ods");
        choser.addChoosableFileFilter(filter);

        mahasiswaService = new MahasiswaServiceImpl();
        mahasiswaService.setEm(PretestServer.getEntityManager());
        statusAwal();
        tableMahasiswa.getSelectionModel().addListSelectionListener(new ListSelectionListener() {

            @Override
            public void valueChanged(ListSelectionEvent e) {
                initSelectTable();
            }
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tableMahasiswa = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        buttonSimpan = new javax.swing.JButton();
        buttonUbah = new javax.swing.JButton();
        buttonHapus = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        textNim = new javax.swing.JTextField();
        textNama = new javax.swing.JTextField();
        textPassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        buttonReload = new javax.swing.JButton();
        textBrowse = new javax.swing.JTextField();
        buttonBrowse = new javax.swing.JButton();

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Tabel Mahasiswa"));

        tableMahasiswa.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tableMahasiswa);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 574, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 550, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 294, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Input Mahasiswa"));

        buttonSimpan.setText("Simpan");
        buttonSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSimpanActionPerformed(evt);
            }
        });

        buttonUbah.setText("Ubah");
        buttonUbah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonUbahActionPerformed(evt);
            }
        });

        buttonHapus.setText("Hapus");
        buttonHapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonHapusActionPerformed(evt);
            }
        });

        jLabel4.setText("Password");

        jLabel2.setText("Nama");

        jLabel1.setText("Nim");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textNim, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(textNama, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE)
                    .addComponent(textPassword, javax.swing.GroupLayout.DEFAULT_SIZE, 187, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textNim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(textNama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(textPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        buttonReload.setText("ReLoad");
        buttonReload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonReloadActionPerformed(evt);
            }
        });

        buttonBrowse.setText("browse file");
        buttonBrowse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonBrowseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(textBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(buttonUbah, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(buttonReload, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(buttonSimpan, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(buttonHapus, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE)
                    .addComponent(buttonBrowse, javax.swing.GroupLayout.DEFAULT_SIZE, 122, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(textBrowse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(buttonBrowse))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(buttonReload)
                            .addComponent(buttonSimpan))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(buttonUbah)
                            .addComponent(buttonHapus)))
                    .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void buttonSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSimpanActionPerformed
        buttonSimpanActionPerformed();
}//GEN-LAST:event_buttonSimpanActionPerformed

    private void buttonUbahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonUbahActionPerformed
        buttonUbahActionPerformed();
}//GEN-LAST:event_buttonUbahActionPerformed

    private void buttonHapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonHapusActionPerformed
        buttonHapusActionPerformed();
}//GEN-LAST:event_buttonHapusActionPerformed

    private void buttonReloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonReloadActionPerformed
        statusAwal();
    }//GEN-LAST:event_buttonReloadActionPerformed

private void buttonBrowseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonBrowseActionPerformed
    buttonBrowseActionPerformed();
}//GEN-LAST:event_buttonBrowseActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonBrowse;
    private javax.swing.JButton buttonHapus;
    private javax.swing.JButton buttonReload;
    private javax.swing.JButton buttonSimpan;
    private javax.swing.JButton buttonUbah;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tableMahasiswa;
    private javax.swing.JTextField textBrowse;
    private javax.swing.JTextField textNama;
    private javax.swing.JTextField textNim;
    private javax.swing.JPasswordField textPassword;
    // End of variables declaration//GEN-END:variables
    private Mahasiswa mahasiswa;
    private List<Mahasiswa> mahasiswaList;
    private MahasiswaServiceImpl mahasiswaService;
    JFileChooser choser = new JFileChooser();
    File file;
    Workbook w;

    private void statusAwal() {
        clearText();
        loadAllData();
        isiTable();
        buttonHapus.setEnabled(false);
        buttonUbah.setEnabled(false);
        buttonSimpan.setText("Simpan");
        buttonSimpan.setEnabled(true);
    }

    private void isiTable() {
        Object data[][] = new Object[mahasiswaList.size()][3];
        int row = 0;
        for (Mahasiswa mhs : mahasiswaList) {
            data[row][0] = mhs.getNim();
            data[row][1] = mhs.getNama();
            data[row][2] = mhs.getPassword();
            row++;
        }
        String titile[] = {"Nim", "Nama", "Password"};
        tableMahasiswa.setModel(new DefaultTableModel(data, titile));
        jScrollPane1.setViewportView(tableMahasiswa);
    }

    private void loadAllData() {
        try {
            mahasiswaList = new ArrayList<Mahasiswa>();
            mahasiswaList = mahasiswaService.findMahasiswas();
        } catch (RemoteException ex) {
            Logger.getLogger(PanelMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void clearText() {
        textNama.setText("");
        textNim.setText("");
        textPassword.setText("");
        textBrowse.setText("");
    }

    private void isiText() {
        textNama.setText(mahasiswa.getNama());
        textNim.setText(mahasiswa.getNim());
        textPassword.setText(mahasiswa.getPassword());
    }

    private void initSelectTable() {
        if (tableMahasiswa.getSelectedRow() >= 0) {
            mahasiswa = mahasiswaList.get(tableMahasiswa.getSelectedRow());
            isiText();
            buttonHapus.setEnabled(true);
            buttonUbah.setEnabled(true);
            buttonSimpan.setEnabled(false);
        }
    }

    private boolean cekText() {
        if (!textNama.getText().isEmpty() && !textNim.getText().isEmpty() && !textPassword.getText().isEmpty()) {
            return true;
        }
        return false;
    }

    private void buttonSimpanActionPerformed() {
        if (buttonSimpan.getText().equals("Upload")) {
            try {
                w = Workbook.getWorkbook(file);
                String nim = null;
                String nama = null;
                String password = null;

                Sheet sheet = w.getSheet(0);
                for (int j = 0; j < sheet.getRows(); j++) {
                    for (int i = 0; i < sheet.getColumns(); i++) {
                        Cell cell = sheet.getCell(i, j);
                        if (j != 0) {
                            if (i == 0) {
                                nim = cell.getContents();
                            }
                            if (i == 1) {
                                nama = cell.getContents();
                            }
                            if (i == 2) {
                                password = cell.getContents();
                            }

                        }
                    }
                    if (j != 0) {
                        mahasiswa = new Mahasiswa();
                        mahasiswa.setNim(nim);
                        mahasiswa.setNama(nama);
                        mahasiswa.setPassword(password);
                        mahasiswaService.save(mahasiswa);
                    }
                }
                statusAwal();
            } catch (IOException ex) {
                Logger.getLogger(PanelMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
            } catch (BiffException ex) {
                Logger.getLogger(PanelMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
            }

        } else if (tableMahasiswa.getSelectedRow() >= 0) {
            clearText();
        } else if (cekText()) {
            try {
                mahasiswa = new Mahasiswa();
                mahasiswa.setNim(textNim.getText().trim());
                mahasiswa.setNama(textNama.getText().trim());
                mahasiswa.setPassword(textPassword.getText().trim());
                if (mahasiswaService.save(mahasiswa)) {
                    statusAwal();
                } else {
                    JOptionPane.showMessageDialog(this, "nim sudah terdaftar.");
                    statusAwal();
                }
            } catch (RemoteException ex) {
                Logger.getLogger(PanelMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "text field tidak boleh kosong");
        }
    }

    private void buttonUbahActionPerformed() {
        if (cekText()) {
            try {
                mahasiswa.setNim(textNim.getText().trim());
                mahasiswa.setNama(textNama.getText().trim());
                mahasiswa.setPassword(textPassword.getText().trim());
                mahasiswaService.save(mahasiswa);
                statusAwal();
            } catch (RemoteException ex) {
                Logger.getLogger(PanelMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else {
            JOptionPane.showMessageDialog(null, "text field tidak boleh kosong");
        }
    }

    private void buttonHapusActionPerformed() {
        if (tableMahasiswa.getSelectedRow() >= 0) {
            try {
                mahasiswa = mahasiswaList.get(tableMahasiswa.getSelectedRow());
                mahasiswaService.delete(mahasiswa);
                JOptionPane.showMessageDialog(null, "data sudah dihapus");
            } catch (RemoteException ex) {
                Logger.getLogger(PanelMahasiswa.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        statusAwal();
    }

    private void buttonBrowseActionPerformed() {
        int ren = choser.showOpenDialog(this);
        if (ren == JFileChooser.APPROVE_OPTION) {
            file = choser.getSelectedFile();
            textBrowse.setText(file.getAbsolutePath());
            buttonSimpan.setText("Upload");
        }
    }

    public Mahasiswa getMahasiswa() {
        return mahasiswa;
    }

    public void setMahasiswa(Mahasiswa mahasiswa) {
        this.mahasiswa = mahasiswa;
    }

    public List<Mahasiswa> getMahasiswaList() {
        return mahasiswaList;
    }

    public void setMahasiswaList(List<Mahasiswa> mahasiswaList) {
        this.mahasiswaList = mahasiswaList;
    }
}
